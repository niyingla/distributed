# 主从数据库配置+分表
#指定数据库名字列表
spring.shardingsphere.datasource.names=primary-ds,replica-ds-0,replica-ds-0

#指定数据库公共的账号和密码 驱动等
spring.shardingsphere.datasource.common.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.common.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.common.username=root
spring.shardingsphere.datasource.common.password=d3eb23f714529f1e73f934876d1b39
#指定数据库链接地址 (主库 从库 可以一主多从)
spring.shardingsphere.datasource.primary-ds.jdbc-url=jdbc:mysql://localhost:3307/ds0?serverTimezone=UTC&useSSL=false
spring.shardingsphere.datasource.replica-ds-0.jdbc-url=jdbc:mysql://localhost:3308/ds0?serverTimezone=UTC&useSSL=false
spring.shardingsphere.datasource.replica-ds-1.jdbc-url=jdbc:mysql://localhost:3308/ds0?serverTimezone=UTC&useSSL=false

#指定主库数据库名           ds0 数据库名字
spring.shardingsphere.rules.replica-query.data-sources.ds0.primary-data-source-name=primary-ds
#从数据源名称                 ds0 数据库名字
spring.shardingsphere.rules.replica-query.data-sources.ds0.replica-data-source-names=replica-ds-0,replica-ds-1
#负载均衡算法名称 指向下面负载均衡算法 ds0 数据库名字
spring.shardingsphere.rules.replica-query.data-sources.ds0.load-balancer-name=round-robin

# 负载均衡算法配置（轮训）
spring.shardingsphere.rules.replica-query.load-balancers.round-robin.type=ROUND_ROBIN
# 负载均衡算法属性 防止报错
spring.shardingsphere.rules.replica-query.load-balancers.round-robin.props.default=0
#打印sql
spring.shardingsphere.props.sql-show=true

# 配置 t_order 表规则 ds0.t_order_0，ds0.t_order_1
spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=ds0.t_order_$->{0..1}

# 配置分表策略 列名
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-column=order_id
#配置分表策略 算法名
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-algorithm-name=table-inline

# 配置 分片算法
spring.shardingsphere.rules.sharding.sharding-algorithms.table-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.table-inline.props.algorithm-expression=t_order_$->{order_id % 2}

# 分布式序列策略配置  t_order表策略字段
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.column=order_id
# 指定策略名字 t_order
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.key-generator-name=snowflake

# 分布式序列算法配置（上面使用的策略名字 进行配置 指定策略类型）
spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
#指定 雪花机器id
spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=123